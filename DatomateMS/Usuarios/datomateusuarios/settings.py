"""
Django settings for datomateusuarios project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta

from dotenv import load_dotenv

# Mandar llamar la funcion load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG")

ALLOWED_HOSTS = [os.getenv("ALLOWED_HOSTS")]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    "rest_framework",

    "accounts",

    "corsheaders",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'datomateusuarios.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'datomateusuarios.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT')
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuracion del correo
EMAIL_BACKEND = os.getenv("EMAIL_BACKEND")

ANYMAIL = {
    "SENDGRID_API_KEY": os.getenv("SENDGRID_API_KEY"),
}

# Dirección de correo del remitente
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL", "l21420225@jiquilpan.tecnm.mx")


# Configuración del sms
VONAGE_API_KEY = os.getenv("VONAGE_API_KEY")

VONAGE_API_SECRET = os.getenv("VONAGE_API_SECRET")

VONAGE_FROM = os.getenv("VONAGE_FROM", "Datomate API")

# Configuración la autenticación y generación de tokens
REST_FRAMEWORK = {
 "DEFAULT_AUTHENTICATION_CLASSES": (
    "rest_framework_simplejwt.authentication.JWTAuthentication",
 ),
}
INSTALLED_APPS += [
 # ... Resto de las Apps
 "rest_framework_simplejwt.token_blacklist", # si vamos a usar blacklist
]
SIMPLE_JWT = {
 "ACCESS_TOKEN_LIFETIME": timedelta(days=1), # corta vida para access
 "REFRESH_TOKEN_LIFETIME": timedelta(days=7), # refresh más largo
 "ROTATE_REFRESH_TOKENS": True, # rota refresh al usar /token/refresh/
 "BLACKLIST_AFTER_ROTATION": True, # blacklist al rotar
 "AUTH_HEADER_TYPES": ("Bearer",),
 # se puede ajustar otras opciones

# LINEAS IMPORTANTES
# Asegurate de que estas usando la clace secreta compartida
 'SIGNING_KEY': os.getenv('SECRET_KEY'),

# Le a simplejwt que use sub como la etiqueta para el id del ususario
 'USER_ID_CLAIM': 'sub'
}

# Para autenticar de acuerdo al modelo de usuario
AUTH_USER_MODEL = "accounts.Usuario"

AUTENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend", #soporte para el modelo de usuario
]

CORS_ALLOW_ALL_ORIGINS = True